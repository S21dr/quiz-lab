[{"D:\\freelance\\react\\quiz-lab\\src\\index.tsx":"1","D:\\freelance\\react\\quiz-lab\\src\\reportWebVitals.ts":"2","D:\\freelance\\react\\quiz-lab\\src\\App.tsx":"3","D:\\freelance\\react\\quiz-lab\\src\\store\\index.ts":"4","D:\\freelance\\react\\quiz-lab\\src\\store\\auth-reducer.ts":"5","D:\\freelance\\react\\quiz-lab\\src\\component\\MainLayout.tsx":"6","D:\\freelance\\react\\quiz-lab\\src\\component\\HeaderApp.tsx":"7","D:\\freelance\\react\\quiz-lab\\src\\component\\select\\index.ts":"8","D:\\freelance\\react\\quiz-lab\\src\\store\\lStorage.ts":"9","D:\\freelance\\react\\quiz-lab\\src\\component\\News.tsx":"10","D:\\freelance\\react\\quiz-lab\\src\\component\\Post.tsx":"11","D:\\freelance\\react\\quiz-lab\\src\\component\\NewPost.tsx":"12","D:\\freelance\\react\\quiz-lab\\src\\component\\Followers.tsx":"13","D:\\freelance\\react\\quiz-lab\\src\\component\\ProfileContainer.tsx":"14","D:\\freelance\\react\\quiz-lab\\src\\component\\Profile.tsx":"15"},{"size":771,"mtime":1612700870255,"results":"16","hashOfConfig":"17"},{"size":425,"mtime":499162500000,"results":"18","hashOfConfig":"17"},{"size":931,"mtime":1612977532760,"results":"19","hashOfConfig":"17"},{"size":536,"mtime":1612707003364,"results":"20","hashOfConfig":"17"},{"size":917,"mtime":1612720929627,"results":"21","hashOfConfig":"17"},{"size":1960,"mtime":1612979345445,"results":"22","hashOfConfig":"17"},{"size":3501,"mtime":1612973393237,"results":"23","hashOfConfig":"17"},{"size":514,"mtime":1612721972184,"results":"24","hashOfConfig":"17"},{"size":6314,"mtime":1612980602438,"results":"25","hashOfConfig":"17"},{"size":1576,"mtime":1612980844829,"results":"26","hashOfConfig":"17"},{"size":2404,"mtime":1612978418045,"results":"27","hashOfConfig":"17"},{"size":1764,"mtime":1612978066044,"results":"28","hashOfConfig":"17"},{"size":1769,"mtime":1612977862221,"results":"29","hashOfConfig":"17"},{"size":1129,"mtime":1612960692670,"results":"30","hashOfConfig":"17"},{"size":5436,"mtime":1612979966249,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"w0x5x",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\freelance\\react\\quiz-lab\\src\\index.tsx",[],["65","66"],"D:\\freelance\\react\\quiz-lab\\src\\reportWebVitals.ts",[],"D:\\freelance\\react\\quiz-lab\\src\\App.tsx",["67"],"D:\\freelance\\react\\quiz-lab\\src\\store\\index.ts",[],"D:\\freelance\\react\\quiz-lab\\src\\store\\auth-reducer.ts",[],"D:\\freelance\\react\\quiz-lab\\src\\component\\MainLayout.tsx",[],"D:\\freelance\\react\\quiz-lab\\src\\component\\HeaderApp.tsx",["68"],"import React, {useState} from 'react';\r\nimport {UserOutlined} from '@ant-design/icons';\r\nimport {Button, Input, Modal} from \"antd\";\r\nimport s from \"../style/header.module.scss\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getAuthorized, getModalLogin, getUsers} from \"./select\";\r\nimport {actionsAuth} from \"../store/auth-reducer\";\r\nimport {actionsLStorage, IUser} from \"../store/lStorage\";\r\nimport {Link,} from 'react-router-dom';\r\n\r\nconst HeaderApp: React.FC = () => {\r\n    const dispatch = useDispatch()\r\n    const isModalVisible = useSelector(getModalLogin)\r\n    const authorized = useSelector(getAuthorized)\r\n    const users = useSelector(getUsers)\r\n    const handleCancel = () => {\r\n        dispatch(actionsAuth.setModalLogin(false))\r\n    }\r\n    const openModal = () => {\r\n        dispatch(actionsAuth.setModalLogin(true))\r\n    }\r\n\r\n    const [input, setInput] = useState('')\r\n    const changeInput = (e: { target: { value: React.SetStateAction<string>; }; }) => {\r\n        let str = e.target.value as string\r\n        str = str.trim()\r\n        setInput(str)\r\n    }\r\n    const login = () => {\r\n        const user: IUser = {\r\n            id: Date.now().toString(),\r\n            name: input,\r\n            sub: [],\r\n            followers: []\r\n        }\r\n\r\n        let item = users.find(el => el.name == input)\r\n        if (!item) {\r\n            localStorage.setItem('users', JSON.stringify([...users, user]));\r\n            dispatch(actionsLStorage.setUser([...users, user]))\r\n            localStorage.setItem('authorized', JSON.stringify(user.id));\r\n            dispatch(actionsLStorage.setAuthorized(user.id))\r\n\r\n        } else {\r\n            localStorage.setItem('authorized', JSON.stringify(item.id))\r\n            dispatch(actionsLStorage.setAuthorized(item.id))\r\n        }\r\n        setInput('')\r\n        dispatch(actionsAuth.setModalLogin(false))\r\n    }\r\n    const logout = () => {\r\n        localStorage.setItem('authorized', '');\r\n        dispatch(actionsLStorage.setAuthorized(''))\r\n    }\r\n    let authUser = users.find(el => el.id === authorized)\r\n    return (\r\n        <header className={s.header}>\r\n            <div>\r\n                <div className={s.wrapLogin}>\r\n                    {\r\n                        authorized ?\r\n                            <>\r\n                                <div>\r\n                                    <UserOutlined/>\r\n                                    {authUser ?\r\n                                        <Link to={`/profile/${authUser.id}`}>{authUser.name}</Link> : ''}\r\n                                </div>\r\n                                <Button onClick={logout} type={\"text\"}>Выйти</Button>\r\n                            </>\r\n\r\n                            : <>\r\n                                <UserOutlined/>\r\n                                <Button onClick={openModal} type={\"text\"}>Войти</Button>\r\n                            </>\r\n                    }\r\n                </div>\r\n\r\n            </div>\r\n            <Modal visible={isModalVisible} onCancel={handleCancel} footer={false}>\r\n                <h2>Введите имя:</h2>\r\n                <Input placeholder={'Имя'} className={s.input} value={input} onChange={changeInput}\r\n                       maxLength={12}\r\n                       onPressEnter={login}/>\r\n                <Button onClick={login} disabled={input.length < 3} type={'primary'}>Продолжить</Button>\r\n            </Modal>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default HeaderApp;","D:\\freelance\\react\\quiz-lab\\src\\component\\select\\index.ts",[],"D:\\freelance\\react\\quiz-lab\\src\\store\\lStorage.ts",[],"D:\\freelance\\react\\quiz-lab\\src\\component\\News.tsx",["69"],"D:\\freelance\\react\\quiz-lab\\src\\component\\Post.tsx",["70","71"],"D:\\freelance\\react\\quiz-lab\\src\\component\\NewPost.tsx",["72"],"D:\\freelance\\react\\quiz-lab\\src\\component\\Followers.tsx",["73"],"D:\\freelance\\react\\quiz-lab\\src\\component\\ProfileContainer.tsx",["74","75","76"],"import React from 'react';\r\nimport {useParams,useHistory} from \"react-router-dom\";\r\n\r\nimport {Avatar} from \"antd\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getAuthorized, getPosts, getUsers} from \"./select\";\r\nimport Post from \"./Post\";\r\nimport {actionsAuth} from \"../store/auth-reducer\";\r\nimport Profile from \"./Profile\";\r\n\r\nconst ProfileContainer: React.FC = () => {\r\n    interface ParamTypes {\r\n        userId: string\r\n    }\r\n    const dispatch = useDispatch()\r\n    const history = useHistory();\r\n    const user = useSelector(getAuthorized)\r\n    const users = useSelector(getUsers)\r\n    let {userId} = useParams<ParamTypes>();\r\n    if (!userId){\r\n        if (user){\r\n            userId = user\r\n        }else {\r\n            history.push('/')\r\n            dispatch(actionsAuth.setModalLogin(true))\r\n        }\r\n    }\r\n    let activeUser = users.find(el=>el.id === userId)\r\n\r\n    const posts = useSelector(getPosts)\r\n    if (!activeUser){\r\n        return <div>404 | Пользователь не найден</div>\r\n    }\r\n    return <Profile activeUser={activeUser}/>;\r\n}\r\n\r\nexport default ProfileContainer;","D:\\freelance\\react\\quiz-lab\\src\\component\\Profile.tsx",["77","78","79","80"],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":1,"column":16,"nodeType":"87","messageId":"88","endLine":1,"endColumn":25},{"ruleId":"89","severity":1,"message":"90","line":37,"column":45,"nodeType":"91","messageId":"92","endLine":37,"endColumn":47},{"ruleId":"85","severity":1,"message":"93","line":7,"column":8,"nodeType":"87","messageId":"88","endLine":7,"endColumn":15},{"ruleId":"85","severity":1,"message":"94","line":7,"column":9,"nodeType":"87","messageId":"88","endLine":7,"endColumn":15},{"ruleId":"95","severity":1,"message":"96","line":48,"column":43,"nodeType":"97","messageId":"98","endLine":48,"endColumn":45},{"ruleId":"85","severity":1,"message":"94","line":2,"column":16,"nodeType":"87","messageId":"88","endLine":2,"endColumn":22},{"ruleId":"95","severity":1,"message":"96","line":28,"column":77,"nodeType":"97","messageId":"98","endLine":28,"endColumn":79},{"ruleId":"85","severity":1,"message":"99","line":4,"column":9,"nodeType":"87","messageId":"88","endLine":4,"endColumn":15},{"ruleId":"85","severity":1,"message":"100","line":7,"column":8,"nodeType":"87","messageId":"88","endLine":7,"endColumn":12},{"ruleId":"85","severity":1,"message":"101","line":30,"column":11,"nodeType":"87","messageId":"88","endLine":30,"endColumn":16},{"ruleId":"85","severity":1,"message":"102","line":7,"column":15,"nodeType":"87","messageId":"88","endLine":7,"endColumn":26},{"ruleId":"85","severity":1,"message":"103","line":21,"column":9,"nodeType":"87","messageId":"88","endLine":21,"endColumn":18},{"ruleId":"95","severity":1,"message":"96","line":97,"column":52,"nodeType":"97","messageId":"98","endLine":97,"endColumn":54},{"ruleId":"95","severity":1,"message":"96","line":108,"column":46,"nodeType":"97","messageId":"98","endLine":108,"endColumn":48},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'NewPost' is defined but never used.","'Button' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Avatar' is defined but never used.","'Post' is defined but never used.","'posts' is assigned a value but never used.","'useLocation' is defined but never used.","'userPosts' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]